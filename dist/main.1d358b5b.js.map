{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","console","log","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.1d358b5b.js","sourceRoot":"..\\src","sourcesContent":["const $siteList = $('.siteList')\r\nconst $lastLi = $siteList.find('li.last')// $lastLi 表示添加网站的按钮(找出siteList中带有last这个类名的li)\r\nconst x = localStorage.getItem('x')// 让变量x接受localStorage里x的值\r\nconst xObject = JSON.parse(x)// 将字符串类型转换为对象\r\nconst hashMap = xObject || [ // 如果xObject是空的，就给它后面一个初始值,否则就用xObject里的值。localStorage里面没有数据时就给两个基础网站,没有数据时就相当于第一次进入。\r\n    { logo: 'A', url: 'https://www.acfun.cn' },\r\n    { logo: 'B', url: 'https://www.bilibili.com' }\r\n];\r\n\r\n// 声明一个简化网址的函数\r\nconst simplifyUrl = (url) => {\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '')    //利用正则表达式将/后面的所有字符串替换为空字符串\r\n}\r\n\r\n// 封装一个函数render，作用是读取haspMap数据用来创建新网址\r\nconst render = () => {\r\n    $siteList.find('li:not(.last)').remove()\r\n    // 找出siteList里面的li(不包括.last类的li)并将其删除，渲染网页的函数大部分都需要先清楚数据，再重新通过遍历添加网页。\r\n    hashMap.forEach((node, index) => {\r\n        // 遍历haspMap数组，node指的是数组里面的每一个对象。主要目的是用哈希数组里面的网址数据来创建每一个li模块，并插入到添加按钮前面。\r\n        const $li =\r\n            $(\r\n                `<li>\r\n                        <div class=\"site\">\r\n                            <div class=\"logo\">${node.logo}</div>\r\n                            <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                            <div class=\"close\">\r\n                                <svg class=\"icon\">\r\n                                    <use xlink:href=\"#icon-close\"></use>\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                </li>`\r\n            ).insertBefore($lastLi)\r\n        $li.on('click', () => {         // 给每个li绑定点击事件，只要点击li就会打开网页\r\n            window.open(node.url)\r\n        })\r\n        $li.on('click', '.close', (e) => {        // 给每个li里面的close绑定点击事件，点击了li里面的close部分，会删除该网站\r\n            e.stopPropagation(); //阻止冒泡，防止打开网页\r\n            hashMap.splice(index, 1);  //删除网址\r\n            render();\r\n        })\r\n    })\r\n}\r\n\r\nrender()// 渲染一次网页\r\n\r\n$('.addButton')\r\n    .on('click', () => {\r\n        let url = window.prompt('请输入您要添加的网址：');\r\n        if (url.indexOf('http') !== 0) {         // 如果网站不是以http开头的，就增加上https://\r\n            url = 'https://' + url;\r\n        }\r\n        console.log(url)\r\n        console.log($siteList)\r\n        hashMap.push(        // 把需要添加的网址信息储存到haspMap里面\r\n            {\r\n                logo: simplifyUrl(url)[0].toUpperCase(),\r\n                url: url\r\n            }\r\n        )\r\n        render()        // 添加新网址后又渲染一次网页\r\n    })\r\n\r\nwindow.onbeforeunload = () => {        // 离开页面时就将数据储存到localStorage里面\r\n    const string = JSON.stringify(hashMap)    // localStorage只能储存字符串，所以要将hashMap转换为字符串\r\n    localStorage.setItem('x', string)    // 在本地储存中设置一个x，它的值是string\r\n}\r\n\r\n$(document).on('keypress', (e) => {\r\n    const { key } = e // const key = e.key的简写;\r\n    for (let i = 0; i < hashMap.length; i++) {\r\n        if (hashMap[i].logo.toLowerCase() === key)\r\n            window.open(hashMap[i].url)\r\n    }\r\n})"]}